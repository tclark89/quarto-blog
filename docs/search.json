[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a blog where I keep code snippets, thoughts, interesting analyses, or just whatever enters my mind."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tyler Clark",
    "section": "",
    "text": "I have been working as a data analyst and statistician since 2016, and have always had a passion for learning, technology, and getting things done. In my spare time I enjoy tinkering with computers and software, playing and writing music, settling in for a long session with my smoker, or just getting outside."
  },
  {
    "objectID": "posts/2022-09-03-my-favorite-packages/index.html",
    "href": "posts/2022-09-03-my-favorite-packages/index.html",
    "title": "My favorite R packages",
    "section": "",
    "text": "Mind Blown\nJust the %>% operator alone radically changed my workflow and caused me to refactor all of my code (Hell, even R is integrating a pipe function now: |> in R 4.1+). Then learning how to use all of the data manipulation tools in dplyr (mutate, select, separate, oh how I could go on) made working with data exciting and intelligible instead of some chore full of arcane commands and confusing code.\nRMarkdown and now Quarto have given me many new avenues for reporting data, results, and analysis, even though I am still heavily tied to having to email an Excel file for some of the old-school folks (I guess if it ain’t broke…). Well, that’s why I learned some VBA too."
  },
  {
    "objectID": "posts/2022-09-03-welcome/index.html",
    "href": "posts/2022-09-03-welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "The github repository for the entire site can be found here."
  },
  {
    "objectID": "posts/2022-09-04-flatpak/index.html",
    "href": "posts/2022-09-04-flatpak/index.html",
    "title": "Some Notes About Flatpak",
    "section": "",
    "text": "After a few years of running ArchLinux on my NAS PC, I recently (a couple weeks ago?) decided to switch to a solid foundation of Debian Stable (Bullseye 11.4 at the time of this post), with most of my userland apps installed via Flatpak.\n\n\n\nFlatpak\n\n\nOne is not better than the other, but I was tired of having to regularly check for updates, decide if they looked important, check the homepage for any breakage news, etc. It’s not so bad for a desktop that is used for tinkering and playing, but for a fileserver running programs that I’d rather not restart all the time (hold on, let me pause this show on Plex and make sure my backup NAS isn’t syncing)…\nSo far so good. The overall system is smaller (due to Debian breaking up packages while Arch installs the kitchen sink at times), and it makes my root backup tarball smaller since I can leave out the flatpak directory and focus on the actual system."
  },
  {
    "objectID": "posts/2022-09-04-flatpak/index.html#flatpak-notes",
    "href": "posts/2022-09-04-flatpak/index.html#flatpak-notes",
    "title": "Some Notes About Flatpak",
    "section": "Flatpak Notes",
    "text": "Flatpak Notes\nAnyway, the main notes that I meant to put here are:\n\nflatpak remote-add flathub flathub-url is not the same as sudo flatpak remote-add flathub flathub-url\n*For a single-user system there’s not that much real difference in terms of the experience, but installing flathub without sudo only installs the repo for YOU and then any apps you install get saved in /home. You do you.\nFlatpak apps are installed at /var/lib/flatpak, so keep that as a separate BTRFS subvolume to exclude them from root backups.\nFor apps, MakeMKV in particular, the app’s personal root is /app/, not /.\nUser config files and data are mostly stored per-app in ~/.var/, but some apps have access to /home/user.\nAdd /var/lib/flatpak/exports/bin to you $PATH to more easily call the apps from the command line, in case error codes need to be looked at.\n\nOverall I’m pretty happy with the change. Most of the gui programs that I use are in flathub, so that’s pretty easy. I was worried about bloat and performance, but it’s really not that bad. Apps are sandboxed, yes, but they can share Flatpak libraries and runtimes so there isn’t so much redundancy. It’s really nice when installing a single Gnome app or Wine not to have to install an entire suite of Gnome apps and multi-lib stuff just for one program."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\n\n4 min\n\n\n\nMicrosoft\n\n\nPowerBI\n\n\nM Code\n\n\nExcel\n\n\ncode\n\n\nnotes\n\n\n\n\n\n\n\nSep 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 min\n\n\n\nflatpak\n\n\nlinux\n\n\nnotes\n\n\ndebian\n\n\narchlinux\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\nR\n\n\nRstudio\n\n\ntidyverse\n\n\n\n\n\n\n\nSep 3, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0 min\n\n\n\nnews\n\n\n\n\n\n\n\nSep 3, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "Sep 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 4, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 3, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 3, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2022-09-05-powerbi-loop-files/index.html",
    "href": "posts/2022-09-05-powerbi-loop-files/index.html",
    "title": "Power Query Tip - Opening Multiple Files",
    "section": "",
    "text": "In this sort of environemnt, the suite of Power tools: PowerBI, Power Query, Power Pivot, etc. is a good choice. As a bonus, they play nicely with OneDrive and SharePoint, and PowerBI allows for automated data updating.\nIn my day-to-day I run into situations where I need to combine several Excel files that are split into chunks, say some sort of accounting information that is saved in separate files per year. Power Query’s GUI can help to get you started, but if you need to do any more complicated data wrangling you’ll need to dive into M code.\nA common template I use for the above scenario is something like this:\nlet\n  // Navigate to the SharePoint library (not folder) with the files.\n  Source = SharePoint.Files(\n    \"https://contoso.sharepoint.com/personal/tyler_contoso_com\",\n    [ApiVersion = 15]\n  ),\n  \n  // Filter the file list down to the correct folder\n  #\"Filtered Folders\" = Table.SelectRows(\n    Source, \n    each [Folder Path] = \"https://contoso.sharepoint.com/personal/tyler_contoso_com/Documents/Documents/Widget Exports/\"),\n    \n  // Filter down to just the right files.\n  // In this example, the files are named \"2022 Widget_Exports.xlsx\", \n  // \"2021 Widget_exports.xlsx\", etc.\n  #\"Filtered Files\" = Table.SelectRows(\n    #\"Filtered Folders\", \n    each Text.Contains([Name], \"Widget_Exports.xlsx\")\n    ),\n    \n  // Excel Opener Function\n  ExcelOpener = (folderPath, fileName) => \n  let\n    // This function nested in the main function processes all of\n    // the Excel files in the same way. It does not change the\n    // column types yet, that is saved for the end. I have had the \n    // column type information get tossed out in a following step,\n    // that's why it doesn't get defined here.\n    // The function does name the columns. \n    SelectFile = #\"Filtered Files\"{\n      [Name = fileName, \n      #\"Folder Path\" = folderPath]}[Content],\n      \n      #\"Imported Excel\" = Excel.Workbook(SelectFile, null, true),\n      \n      #\"Navigation\" = #\"Imported Excel\"{\n      [Item = \"Sheet\", Kind = \"Sheet\"]\n      }[Data],\n      \n      #\"Filtered rows\" = Table.SelectRows(\n        // If there are any merged cells, this can toss unnecessary rows\n        #\"Navigation\", each [Column2] <> null),\n        \n      #\"Promoted headers\" = Table.PromoteHeaders(\n      #\"Filtered rows\", [PromoteAllScalars = true]\n      )\n  in\n    #\"Promoted headers\",\n  \n  // To use the function, make a new column and get its values from the\n  // function. It will be a nested data column.\n  #\"Added Custom\" = Table.AddColumn(\n    #\"Filtered Files\", \n    \"Custom\", \n    each ExcelOpener([Folder Path], [Name])\n    ),\n  \n  // We can remove everything but the new column  \n  #\"Removed columns\" = Table.RemoveColumns(\n    #\"Added Custom\", \n    {\"Content\", \"Name\", \"Extension\", \"Date accessed\", \n      \"Date modified\", \"Date created\", \"Attributes\", \n      \"Folder Path\"}\n    ),\n  \n  // Expand the column and select all of the named columns  \n  #\"Expanded Custom\" = Table.ExpandTableColumn(\n    #\"Removed columns\", \n    \"Custom\", \n    {\"Acct No\", \"Cust No\", \"PO\", \"Transaction Date\", \"Widget Type\", \n      \"Widget Cost Per Unit\", \"Total Units\", \"Total Cost\", \n     \"Shipped\", \"Shipped Date\"}\n    ),\n  \n  // Now we will set the column types\n  #\"Changed column type\" = Table.TransformColumnTypes(\n    #\"Expanded Custom\", \n    {\n      {\"Acct No\", type text}, \n      {\"Cust No\", type text}, \n      {\"PO\", type text}, \n      {\"Transaction Date\", type date}, \n      {\"Widget Type\", type text}, \n      {\"Widget Cost Per Unit\", type number}, \n      {\"Total Units\", Int64.Type}, \n      {\"Total Cost\", type number}, \n      {\"Shipped\", logical}, \n      {\"Shipped Date\", type date}\n      }\n    )\nin\n  #\"Changed column type\"\nUsing code similar to this will combine the directory full of files into one big Power dataset that you can now modify as needed for the analysis or report that you are using."
  },
  {
    "objectID": "index.html#education-experience",
    "href": "index.html#education-experience",
    "title": "Tyler Clark",
    "section": "Education & Experience",
    "text": "Education & Experience\n\nProfessional Experience - 2016-Present\n\nAnalytics and Statistics\nResearch\nBusiness Planning\nProcess Control\n\nGraduate 2013-2015\n\nMaster’s in Poultry Science with an emphasis on applied Statistics and Analytics\n\nUndergraduate 2007-2011\n\nBS in Poultry Science w/ Minor in Agricultural Business\n\nHigh School 2003-2007\n\nACE & Quiz Bowl\nFFA\nSalutatorian\n\n\nThis website is written using Quarto and Rstudio, and available at GitHub"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Tyler Clark",
    "section": "Education",
    "text": "Education\n\nUniversity of Arkansas: Fayetteville, AR | 2013-2015\n\nM.S. in Poultry Science with an emphasis on applied Statistics and Analytics\n\nUniversity of Arkansas: Fayetteville, AR | 2007-2011\n\nBS in Poultry Science\nMinor in Agricultural Business\n\nElkins High School: Elkins, AR | 2003-2007\n\nSalutatorian\nFFA Officer\nFFA Poultry Judging Team State Finalist"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Tyler Clark",
    "section": "Experience",
    "text": "Experience\n\nButterball, LLC - 2016-Present\n\nAnalytics and Statistics\nResearch\nBusiness Planning\nProcess Control\n\n\nThis website is written using Quarto and Rstudio. The source code is available on GitHub"
  }
]