<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Tyler Clark</title>
<link>https://tclark89.github.io/quarto-blog/blog.html</link>
<atom:link href="https://tclark89.github.io/quarto-blog/blog.xml" rel="self" type="application/rss+xml"/>
<description>Tyler's personal blog</description>
<generator>quarto-1.0.36</generator>
<lastBuildDate>Tue, 13 Sep 2022 05:00:00 GMT</lastBuildDate>
<item>
  <title>Dplyr’s case_when</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-13-case_when/index.html</link>
  <description><![CDATA[ 




<p>This is a very small post that’s really more of a note-to-self. I wind up using nested <code>if_else</code> statements a lot, but <code>dplyr</code> contains a nifty function that really eliminates the need for them and in turn cleans up the code. The <code>case_when</code> function operates very similarly to <code>CASE WHEN THEN ELSE</code> in SQL:</p>
<p><strong>SQL</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb1-1"><span class="kw" style="color: #003B4F;">SELECT</span> </span>
<span id="cb1-2">  <span class="cf" style="color: #003B4F;">CASE</span> </span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;">WHEN</span> x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">1</span> <span class="cf" style="color: #003B4F;">THEN</span> <span class="st" style="color: #20794D;">'a'</span></span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;">WHEN</span> x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">2</span> <span class="cf" style="color: #003B4F;">THEN</span> <span class="st" style="color: #20794D;">'b'</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;">WHEN</span> x <span class="op" style="color: #5E5E5E;">=</span> <span class="dv" style="color: #AD0000;">3</span> <span class="cf" style="color: #003B4F;">THEN</span> <span class="st" style="color: #20794D;">'c'</span></span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;">ELSE</span> <span class="st" style="color: #20794D;">'d'</span></span>
<span id="cb1-7">  <span class="cf" style="color: #003B4F;">END</span>  </span></code></pre></div>
<p><strong>dplyr</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">case_when</span>(</span>
<span id="cb2-2">  x <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">1</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"a"</span>,</span>
<span id="cb2-3">  x <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">2</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"b"</span>,</span>
<span id="cb2-4">  x <span class="sc" style="color: #5E5E5E;">==</span> <span class="dv" style="color: #AD0000;">3</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"c"</span>,</span>
<span id="cb2-5">  <span class="cn" style="color: #8f5902;">TRUE</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"d"</span></span>
<span id="cb2-6">)</span></code></pre></div>
<p>Like in SQL, <code>dplyr::case_when()</code> works its way down the list of conditionals in the order that they appear. It’s good practice to include the <code>TRUE ~ result</code> statement at the end. Sometimes you may want an “other” result, other times you may just want to make sure that you’ve caught all the rows.</p>
<p>For a more detailed example:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;"># Let's load some libraries:</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;">library</span>(tibble)</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;">library</span>(dplyr)</span></code></pre></div>
</div>
<div class="cell" data-lable="mtcars-rownames">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;"># I'll use mtcars, and we'll look at the car model</span></span>
<span id="cb4-2">mtcarsMod <span class="ot" style="color: #003B4F;">&lt;-</span> mtcars <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;">rownames_to_column</span>(<span class="at" style="color: #657422;">var=</span><span class="st" style="color: #20794D;">"model"</span>)</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;">head</span>(mtcarsMod)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>              model  mpg cyl disp  hp drat    wt  qsec vs am gear carb
1         Mazda RX4 21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
2     Mazda RX4 Wag 21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
3        Datsun 710 22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
4    Hornet 4 Drive 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
5 Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
6           Valiant 18.1   6  225 105 2.76 3.460 20.22  1  0    3    1</code></pre>
</div>
</div>
<p>Let’s say that we want to add the manufacturer as a separate column. There are a few ways to do it:</p>
<section id="nested-if_else" class="level3">
<h3 class="anchored" data-anchor-id="nested-if_else">Nested if_else</h3>
<p>The first way that always enters my head is to do nested if_else statements. It’s not terrible when there are only a few options, but they get ugly fast:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">mtcarsMod <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb6-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Mazda"</span>, model), <span class="st" style="color: #20794D;">"Mazda"</span>, </span>
<span id="cb6-3">                        <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Hornet"</span>, model), <span class="st" style="color: #20794D;">"Hornet"</span>,</span>
<span id="cb6-4">                                <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Merc"</span>, model), <span class="st" style="color: #20794D;">"Mercury"</span>,</span>
<span id="cb6-5">                                        <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Datsun"</span>, model), <span class="st" style="color: #20794D;">"Datsun"</span>, </span>
<span id="cb6-6">                                                <span class="co" style="color: #5E5E5E;"># etc.</span></span>
<span id="cb6-7">                                                <span class="st" style="color: #20794D;">"Other"</span>))))) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;">select</span>(make, <span class="fu" style="color: #4758AB;">names</span>(mtcarsMod)) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb6-9">  rmarkdown<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">paged_table</span>()</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["make"],"name":[1],"type":["chr"],"align":["left"]},{"label":["model"],"name":[2],"type":["chr"],"align":["left"]},{"label":["mpg"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["cyl"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["disp"],"name":[5],"type":["dbl"],"align":["right"]},{"label":["hp"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["drat"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["wt"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["qsec"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["vs"],"name":[10],"type":["dbl"],"align":["right"]},{"label":["am"],"name":[11],"type":["dbl"],"align":["right"]},{"label":["gear"],"name":[12],"type":["dbl"],"align":["right"]},{"label":["carb"],"name":[13],"type":["dbl"],"align":["right"]}],"data":[{"1":"Mazda","2":"Mazda RX4","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.620","9":"16.46","10":"0","11":"1","12":"4","13":"4"},{"1":"Mazda","2":"Mazda RX4 Wag","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.875","9":"17.02","10":"0","11":"1","12":"4","13":"4"},{"1":"Datsun","2":"Datsun 710","3":"22.8","4":"4","5":"108.0","6":"93","7":"3.85","8":"2.320","9":"18.61","10":"1","11":"1","12":"4","13":"1"},{"1":"Hornet","2":"Hornet 4 Drive","3":"21.4","4":"6","5":"258.0","6":"110","7":"3.08","8":"3.215","9":"19.44","10":"1","11":"0","12":"3","13":"1"},{"1":"Hornet","2":"Hornet Sportabout","3":"18.7","4":"8","5":"360.0","6":"175","7":"3.15","8":"3.440","9":"17.02","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Valiant","3":"18.1","4":"6","5":"225.0","6":"105","7":"2.76","8":"3.460","9":"20.22","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Duster 360","3":"14.3","4":"8","5":"360.0","6":"245","7":"3.21","8":"3.570","9":"15.84","10":"0","11":"0","12":"3","13":"4"},{"1":"Mercury","2":"Merc 240D","3":"24.4","4":"4","5":"146.7","6":"62","7":"3.69","8":"3.190","9":"20.00","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 230","3":"22.8","4":"4","5":"140.8","6":"95","7":"3.92","8":"3.150","9":"22.90","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 280","3":"19.2","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.30","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 280C","3":"17.8","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.90","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 450SE","3":"16.4","4":"8","5":"275.8","6":"180","7":"3.07","8":"4.070","9":"17.40","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SL","3":"17.3","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.730","9":"17.60","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SLC","3":"15.2","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.780","9":"18.00","10":"0","11":"0","12":"3","13":"3"},{"1":"Other","2":"Cadillac Fleetwood","3":"10.4","4":"8","5":"472.0","6":"205","7":"2.93","8":"5.250","9":"17.98","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Lincoln Continental","3":"10.4","4":"8","5":"460.0","6":"215","7":"3.00","8":"5.424","9":"17.82","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Chrysler Imperial","3":"14.7","4":"8","5":"440.0","6":"230","7":"3.23","8":"5.345","9":"17.42","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Fiat 128","3":"32.4","4":"4","5":"78.7","6":"66","7":"4.08","8":"2.200","9":"19.47","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Honda Civic","3":"30.4","4":"4","5":"75.7","6":"52","7":"4.93","8":"1.615","9":"18.52","10":"1","11":"1","12":"4","13":"2"},{"1":"Other","2":"Toyota Corolla","3":"33.9","4":"4","5":"71.1","6":"65","7":"4.22","8":"1.835","9":"19.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Toyota Corona","3":"21.5","4":"4","5":"120.1","6":"97","7":"3.70","8":"2.465","9":"20.01","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Dodge Challenger","3":"15.5","4":"8","5":"318.0","6":"150","7":"2.76","8":"3.520","9":"16.87","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"AMC Javelin","3":"15.2","4":"8","5":"304.0","6":"150","7":"3.15","8":"3.435","9":"17.30","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Camaro Z28","3":"13.3","4":"8","5":"350.0","6":"245","7":"3.73","8":"3.840","9":"15.41","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Pontiac Firebird","3":"19.2","4":"8","5":"400.0","6":"175","7":"3.08","8":"3.845","9":"17.05","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Fiat X1-9","3":"27.3","4":"4","5":"79.0","6":"66","7":"4.08","8":"1.935","9":"18.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Porsche 914-2","3":"26.0","4":"4","5":"120.3","6":"91","7":"4.43","8":"2.140","9":"16.70","10":"0","11":"1","12":"5","13":"2"},{"1":"Other","2":"Lotus Europa","3":"30.4","4":"4","5":"95.1","6":"113","7":"3.77","8":"1.513","9":"16.90","10":"1","11":"1","12":"5","13":"2"},{"1":"Other","2":"Ford Pantera L","3":"15.8","4":"8","5":"351.0","6":"264","7":"4.22","8":"3.170","9":"14.50","10":"0","11":"1","12":"5","13":"4"},{"1":"Other","2":"Ferrari Dino","3":"19.7","4":"6","5":"145.0","6":"175","7":"3.62","8":"2.770","9":"15.50","10":"0","11":"1","12":"5","13":"6"},{"1":"Other","2":"Maserati Bora","3":"15.0","4":"8","5":"301.0","6":"335","7":"3.54","8":"3.570","9":"14.60","10":"0","11":"1","12":"5","13":"8"},{"1":"Other","2":"Volvo 142E","3":"21.4","4":"4","5":"121.0","6":"109","7":"4.11","8":"2.780","9":"18.60","10":"1","11":"1","12":"4","13":"2"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
</section>
<section id="multiple-mutates" class="level3">
<h3 class="anchored" data-anchor-id="multiple-mutates">Multiple mutates</h3>
<p>One way to make things cleaner is to do multiple mutates. Create the new column with your “catch-all” value, then use conditional statements that leave the new column unchanged when the condition is FALSE:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">mtcarsMod <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb7-2">  <span class="fu" style="color: #4758AB;">mutate</span>(</span>
<span id="cb7-3">    <span class="at" style="color: #657422;">make =</span> <span class="st" style="color: #20794D;">"Other"</span>,</span>
<span id="cb7-4">    <span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Mazda"</span>, model), <span class="st" style="color: #20794D;">"Mazda"</span>, make),</span>
<span id="cb7-5">    <span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Hornet"</span>, model), <span class="st" style="color: #20794D;">"Hornet"</span>, make),</span>
<span id="cb7-6">    <span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Merc"</span>, model), <span class="st" style="color: #20794D;">"Mercury"</span>, make),</span>
<span id="cb7-7">    <span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">if_else</span>(<span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Datsun"</span>, model), <span class="st" style="color: #20794D;">"Datsun"</span>, make)</span>
<span id="cb7-8">    <span class="co" style="color: #5E5E5E;"># etc.</span></span>
<span id="cb7-9">  ) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb7-10">  <span class="fu" style="color: #4758AB;">select</span>(make, <span class="fu" style="color: #4758AB;">names</span>(mtcarsMod)) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb7-11">  rmarkdown<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">paged_table</span>()</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["make"],"name":[1],"type":["chr"],"align":["left"]},{"label":["model"],"name":[2],"type":["chr"],"align":["left"]},{"label":["mpg"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["cyl"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["disp"],"name":[5],"type":["dbl"],"align":["right"]},{"label":["hp"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["drat"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["wt"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["qsec"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["vs"],"name":[10],"type":["dbl"],"align":["right"]},{"label":["am"],"name":[11],"type":["dbl"],"align":["right"]},{"label":["gear"],"name":[12],"type":["dbl"],"align":["right"]},{"label":["carb"],"name":[13],"type":["dbl"],"align":["right"]}],"data":[{"1":"Mazda","2":"Mazda RX4","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.620","9":"16.46","10":"0","11":"1","12":"4","13":"4"},{"1":"Mazda","2":"Mazda RX4 Wag","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.875","9":"17.02","10":"0","11":"1","12":"4","13":"4"},{"1":"Datsun","2":"Datsun 710","3":"22.8","4":"4","5":"108.0","6":"93","7":"3.85","8":"2.320","9":"18.61","10":"1","11":"1","12":"4","13":"1"},{"1":"Hornet","2":"Hornet 4 Drive","3":"21.4","4":"6","5":"258.0","6":"110","7":"3.08","8":"3.215","9":"19.44","10":"1","11":"0","12":"3","13":"1"},{"1":"Hornet","2":"Hornet Sportabout","3":"18.7","4":"8","5":"360.0","6":"175","7":"3.15","8":"3.440","9":"17.02","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Valiant","3":"18.1","4":"6","5":"225.0","6":"105","7":"2.76","8":"3.460","9":"20.22","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Duster 360","3":"14.3","4":"8","5":"360.0","6":"245","7":"3.21","8":"3.570","9":"15.84","10":"0","11":"0","12":"3","13":"4"},{"1":"Mercury","2":"Merc 240D","3":"24.4","4":"4","5":"146.7","6":"62","7":"3.69","8":"3.190","9":"20.00","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 230","3":"22.8","4":"4","5":"140.8","6":"95","7":"3.92","8":"3.150","9":"22.90","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 280","3":"19.2","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.30","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 280C","3":"17.8","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.90","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 450SE","3":"16.4","4":"8","5":"275.8","6":"180","7":"3.07","8":"4.070","9":"17.40","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SL","3":"17.3","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.730","9":"17.60","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SLC","3":"15.2","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.780","9":"18.00","10":"0","11":"0","12":"3","13":"3"},{"1":"Other","2":"Cadillac Fleetwood","3":"10.4","4":"8","5":"472.0","6":"205","7":"2.93","8":"5.250","9":"17.98","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Lincoln Continental","3":"10.4","4":"8","5":"460.0","6":"215","7":"3.00","8":"5.424","9":"17.82","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Chrysler Imperial","3":"14.7","4":"8","5":"440.0","6":"230","7":"3.23","8":"5.345","9":"17.42","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Fiat 128","3":"32.4","4":"4","5":"78.7","6":"66","7":"4.08","8":"2.200","9":"19.47","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Honda Civic","3":"30.4","4":"4","5":"75.7","6":"52","7":"4.93","8":"1.615","9":"18.52","10":"1","11":"1","12":"4","13":"2"},{"1":"Other","2":"Toyota Corolla","3":"33.9","4":"4","5":"71.1","6":"65","7":"4.22","8":"1.835","9":"19.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Toyota Corona","3":"21.5","4":"4","5":"120.1","6":"97","7":"3.70","8":"2.465","9":"20.01","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Dodge Challenger","3":"15.5","4":"8","5":"318.0","6":"150","7":"2.76","8":"3.520","9":"16.87","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"AMC Javelin","3":"15.2","4":"8","5":"304.0","6":"150","7":"3.15","8":"3.435","9":"17.30","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Camaro Z28","3":"13.3","4":"8","5":"350.0","6":"245","7":"3.73","8":"3.840","9":"15.41","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Pontiac Firebird","3":"19.2","4":"8","5":"400.0","6":"175","7":"3.08","8":"3.845","9":"17.05","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Fiat X1-9","3":"27.3","4":"4","5":"79.0","6":"66","7":"4.08","8":"1.935","9":"18.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Porsche 914-2","3":"26.0","4":"4","5":"120.3","6":"91","7":"4.43","8":"2.140","9":"16.70","10":"0","11":"1","12":"5","13":"2"},{"1":"Other","2":"Lotus Europa","3":"30.4","4":"4","5":"95.1","6":"113","7":"3.77","8":"1.513","9":"16.90","10":"1","11":"1","12":"5","13":"2"},{"1":"Other","2":"Ford Pantera L","3":"15.8","4":"8","5":"351.0","6":"264","7":"4.22","8":"3.170","9":"14.50","10":"0","11":"1","12":"5","13":"4"},{"1":"Other","2":"Ferrari Dino","3":"19.7","4":"6","5":"145.0","6":"175","7":"3.62","8":"2.770","9":"15.50","10":"0","11":"1","12":"5","13":"6"},{"1":"Other","2":"Maserati Bora","3":"15.0","4":"8","5":"301.0","6":"335","7":"3.54","8":"3.570","9":"14.60","10":"0","11":"1","12":"5","13":"8"},{"1":"Other","2":"Volvo 142E","3":"21.4","4":"4","5":"121.0","6":"109","7":"4.11","8":"2.780","9":"18.60","10":"1","11":"1","12":"4","13":"2"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
</section>
<section id="case_when" class="level3">
<h3 class="anchored" data-anchor-id="case_when">case_when</h3>
<p>But the cleanest way (IMHO) is to use case_when. I don’t know why I always forget about it, but maybe the act of making this post will permanently etch it into my brain.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">mtcarsMod <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb8-2">  <span class="fu" style="color: #4758AB;">mutate</span>(<span class="at" style="color: #657422;">make =</span> <span class="fu" style="color: #4758AB;">case_when</span>(</span>
<span id="cb8-3">    <span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Mazda"</span>, model) <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"Mazda"</span>,</span>
<span id="cb8-4">    <span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Hornet"</span>, model) <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"Hornet"</span>,</span>
<span id="cb8-5">    <span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Merc"</span>, model) <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"Mercury"</span>,</span>
<span id="cb8-6">    <span class="fu" style="color: #4758AB;">grepl</span>(<span class="st" style="color: #20794D;">"Datsun"</span>, model) <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"Datsun"</span>,</span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;"># etc.</span></span>
<span id="cb8-8">    <span class="cn" style="color: #8f5902;">TRUE</span> <span class="sc" style="color: #5E5E5E;">~</span> <span class="st" style="color: #20794D;">"Other"</span></span>
<span id="cb8-9">  )) <span class="sc" style="color: #5E5E5E;">|&gt;</span> </span>
<span id="cb8-10">   <span class="fu" style="color: #4758AB;">select</span>(make, <span class="fu" style="color: #4758AB;">names</span>(mtcarsMod)) <span class="sc" style="color: #5E5E5E;">|&gt;</span></span>
<span id="cb8-11">  rmarkdown<span class="sc" style="color: #5E5E5E;">::</span><span class="fu" style="color: #4758AB;">paged_table</span>()</span></code></pre></div>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["make"],"name":[1],"type":["chr"],"align":["left"]},{"label":["model"],"name":[2],"type":["chr"],"align":["left"]},{"label":["mpg"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["cyl"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["disp"],"name":[5],"type":["dbl"],"align":["right"]},{"label":["hp"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["drat"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["wt"],"name":[8],"type":["dbl"],"align":["right"]},{"label":["qsec"],"name":[9],"type":["dbl"],"align":["right"]},{"label":["vs"],"name":[10],"type":["dbl"],"align":["right"]},{"label":["am"],"name":[11],"type":["dbl"],"align":["right"]},{"label":["gear"],"name":[12],"type":["dbl"],"align":["right"]},{"label":["carb"],"name":[13],"type":["dbl"],"align":["right"]}],"data":[{"1":"Mazda","2":"Mazda RX4","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.620","9":"16.46","10":"0","11":"1","12":"4","13":"4"},{"1":"Mazda","2":"Mazda RX4 Wag","3":"21.0","4":"6","5":"160.0","6":"110","7":"3.90","8":"2.875","9":"17.02","10":"0","11":"1","12":"4","13":"4"},{"1":"Datsun","2":"Datsun 710","3":"22.8","4":"4","5":"108.0","6":"93","7":"3.85","8":"2.320","9":"18.61","10":"1","11":"1","12":"4","13":"1"},{"1":"Hornet","2":"Hornet 4 Drive","3":"21.4","4":"6","5":"258.0","6":"110","7":"3.08","8":"3.215","9":"19.44","10":"1","11":"0","12":"3","13":"1"},{"1":"Hornet","2":"Hornet Sportabout","3":"18.7","4":"8","5":"360.0","6":"175","7":"3.15","8":"3.440","9":"17.02","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Valiant","3":"18.1","4":"6","5":"225.0","6":"105","7":"2.76","8":"3.460","9":"20.22","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Duster 360","3":"14.3","4":"8","5":"360.0","6":"245","7":"3.21","8":"3.570","9":"15.84","10":"0","11":"0","12":"3","13":"4"},{"1":"Mercury","2":"Merc 240D","3":"24.4","4":"4","5":"146.7","6":"62","7":"3.69","8":"3.190","9":"20.00","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 230","3":"22.8","4":"4","5":"140.8","6":"95","7":"3.92","8":"3.150","9":"22.90","10":"1","11":"0","12":"4","13":"2"},{"1":"Mercury","2":"Merc 280","3":"19.2","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.30","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 280C","3":"17.8","4":"6","5":"167.6","6":"123","7":"3.92","8":"3.440","9":"18.90","10":"1","11":"0","12":"4","13":"4"},{"1":"Mercury","2":"Merc 450SE","3":"16.4","4":"8","5":"275.8","6":"180","7":"3.07","8":"4.070","9":"17.40","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SL","3":"17.3","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.730","9":"17.60","10":"0","11":"0","12":"3","13":"3"},{"1":"Mercury","2":"Merc 450SLC","3":"15.2","4":"8","5":"275.8","6":"180","7":"3.07","8":"3.780","9":"18.00","10":"0","11":"0","12":"3","13":"3"},{"1":"Other","2":"Cadillac Fleetwood","3":"10.4","4":"8","5":"472.0","6":"205","7":"2.93","8":"5.250","9":"17.98","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Lincoln Continental","3":"10.4","4":"8","5":"460.0","6":"215","7":"3.00","8":"5.424","9":"17.82","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Chrysler Imperial","3":"14.7","4":"8","5":"440.0","6":"230","7":"3.23","8":"5.345","9":"17.42","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Fiat 128","3":"32.4","4":"4","5":"78.7","6":"66","7":"4.08","8":"2.200","9":"19.47","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Honda Civic","3":"30.4","4":"4","5":"75.7","6":"52","7":"4.93","8":"1.615","9":"18.52","10":"1","11":"1","12":"4","13":"2"},{"1":"Other","2":"Toyota Corolla","3":"33.9","4":"4","5":"71.1","6":"65","7":"4.22","8":"1.835","9":"19.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Toyota Corona","3":"21.5","4":"4","5":"120.1","6":"97","7":"3.70","8":"2.465","9":"20.01","10":"1","11":"0","12":"3","13":"1"},{"1":"Other","2":"Dodge Challenger","3":"15.5","4":"8","5":"318.0","6":"150","7":"2.76","8":"3.520","9":"16.87","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"AMC Javelin","3":"15.2","4":"8","5":"304.0","6":"150","7":"3.15","8":"3.435","9":"17.30","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Camaro Z28","3":"13.3","4":"8","5":"350.0","6":"245","7":"3.73","8":"3.840","9":"15.41","10":"0","11":"0","12":"3","13":"4"},{"1":"Other","2":"Pontiac Firebird","3":"19.2","4":"8","5":"400.0","6":"175","7":"3.08","8":"3.845","9":"17.05","10":"0","11":"0","12":"3","13":"2"},{"1":"Other","2":"Fiat X1-9","3":"27.3","4":"4","5":"79.0","6":"66","7":"4.08","8":"1.935","9":"18.90","10":"1","11":"1","12":"4","13":"1"},{"1":"Other","2":"Porsche 914-2","3":"26.0","4":"4","5":"120.3","6":"91","7":"4.43","8":"2.140","9":"16.70","10":"0","11":"1","12":"5","13":"2"},{"1":"Other","2":"Lotus Europa","3":"30.4","4":"4","5":"95.1","6":"113","7":"3.77","8":"1.513","9":"16.90","10":"1","11":"1","12":"5","13":"2"},{"1":"Other","2":"Ford Pantera L","3":"15.8","4":"8","5":"351.0","6":"264","7":"4.22","8":"3.170","9":"14.50","10":"0","11":"1","12":"5","13":"4"},{"1":"Other","2":"Ferrari Dino","3":"19.7","4":"6","5":"145.0","6":"175","7":"3.62","8":"2.770","9":"15.50","10":"0","11":"1","12":"5","13":"6"},{"1":"Other","2":"Maserati Bora","3":"15.0","4":"8","5":"301.0","6":"335","7":"3.54","8":"3.570","9":"14.60","10":"0","11":"1","12":"5","13":"8"},{"1":"Other","2":"Volvo 142E","3":"21.4","4":"4","5":"121.0","6":"109","7":"4.11","8":"2.780","9":"18.60","10":"1","11":"1","12":"4","13":"2"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>tidyverse</category>
  <category>dplyr</category>
  <category>notes</category>
  <category>code</category>
  <category>R</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-13-case_when/index.html</guid>
  <pubDate>Tue, 13 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-13-case_when/dplyr-logo.png" medium="image" type="image/png" height="166" width="144"/>
</item>
<item>
  <title>My Home RStudio Setup</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-07-my-rstudio-setup/index.html</link>
  <description><![CDATA[ 




<p>When I am working on, well, work-related work, I use my company-issued laptop with Windows, Microsoft Office tools, and an installation of RStudio Desktop.</p>
<p>Recently I have been wanting to setup a personal installation of RStudio on my home file server as well. The main reasons being that RStudio makes for a great general-purpose IDE, and I’ve been wanting to start working with Quarto on some things, so right now seemed like a great time to figure it out.</p>
<section id="backstory" class="level2">
<h2 class="anchored" data-anchor-id="backstory">Backstory</h2>
<p>I wrote in a <a href="../../posts/2022-09-04-flatpak/index.html">previous post</a> that I am working on making my home file server more stable, which means moving more of the userland packages to containers. Most of the programs I use on that PC (Firefox, VLC, Gimp, etc.) all have flatpaks that work quite well for me.</p>
<p>However, R and RStudio are not in that category. On Debian, both require going outside of the official Debian repositories: R has a repository for up-to-date versions, while RStudio does not (although they do provide binary downloads). Add to that the system dependencies of some packages and now there are random libraries installed all over, with no dependency chain in apt. There is the option to use the Debian packages from the CRAN repository, but those are not complete and have given me issues in the past, as far as permissions, updates, etc.</p>
<p>It seemed to me that R would need it’s own environment. How best to do that? I turned to <a href="https://www.docker.com/">Docker</a> for this particular case.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://www.docker.com/" title="Docker"><img src="https://tclark89.github.io/quarto-blog/posts/2022-09-07-my-rstudio-setup/vertical-logo-monochromatic.png" class="img-fluid figure-img" style="width:30.0%"></a></p>
<p></p><figcaption class="figure-caption">Docker</figcaption><p></p>
</figure>
</div>
</section>
<section id="docker-setup" class="level2">
<h2 class="anchored" data-anchor-id="docker-setup">Docker Setup</h2>
<section id="base-image" class="level3">
<h3 class="anchored" data-anchor-id="base-image">Base Image</h3>
<p>Luckily, smarter people than myself have already thought about this and started the <a href="https://rocker-project.org/">Rocker Project</a>. They have many different containers all built in layers on each other so it’s easy to find a good starting point for running R/shiny apps, or building a general dev environment like I was looking for.</p>
</section>
<section id="adding-on-layers" class="level3">
<h3 class="anchored" data-anchor-id="adding-on-layers">Adding on Layers</h3>
<p>At the time of this post I chose the <code>rocker/tidyverse</code> image to build my RStudio environment, but this could change in the future (see my <a href="https://github.com/tclark89/tidyverse-extra">repo</a> for the latest). Having Rstudio server and the tidyverse packages gets me 90% of the way to where I want to be, but there are other packages that I use quite a bit. To get those packages I would either need to</p>
<ul>
<li>Option 1:
<ul>
<li>Spin up an image,</li>
<li>Download the packages in the image</li>
<li>Save that modified environment as a new image via <code>docker commit</code></li>
</ul></li>
<li>Option 2:
<ul>
<li>Create a Dockerfile and let <code>docker build</code> handle it</li>
</ul></li>
</ul>
<p>I am a big fan of keeping things simple, reproducible, and mostly in line with the intended workflow (sometimes rules are made to be broken, but I am not familiar enough with docker to be getting my hands <em>that</em> dirty just yet), so I went with Option 2.</p>
</section>
<section id="configuration" class="level3">
<h3 class="anchored" data-anchor-id="configuration">Configuration</h3>
<p>At the time of this post, this is my Dockerfile:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb1-1"><span class="kw" style="color: #003B4F;">FROM</span> rocker/tidyverse:4.2.1</span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;">COPY</span> packages.R /home/rstudio/packages.R</span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;">RUN</span> <span class="ex" style="color: null;">R</span> <span class="at" style="color: #657422;">-q</span> <span class="at" style="color: #657422;">-e</span> <span class="st" style="color: #20794D;">"source('/home/rstudio/packages.R')"</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;">rm</span> <span class="at" style="color: #657422;">-rf</span> /tmp/<span class="pp" style="color: #AD0000;">*</span> <span class="dt" style="color: #AD0000;">\</span></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;">strip</span> /usr/local/lib/R/site-library/<span class="pp" style="color: #AD0000;">*</span>/libs/<span class="pp" style="color: #AD0000;">*</span>.so</span></code></pre></div>
<p>I start with the <code>rocker/tidyverse:4.2.1</code> image, then copy an R script into the rstudio home directory:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;">install.packages</span>(</span>
<span id="cb2-2">         <span class="fu" style="color: #4758AB;">c</span>(</span>
<span id="cb2-3">           <span class="st" style="color: #20794D;">"markdown"</span>,</span>
<span id="cb2-4">           <span class="st" style="color: #20794D;">"gt"</span>, </span>
<span id="cb2-5">           <span class="st" style="color: #20794D;">"DT"</span>, </span>
<span id="cb2-6">           <span class="st" style="color: #20794D;">"kableExtra"</span>, </span>
<span id="cb2-7">           <span class="st" style="color: #20794D;">"flextable"</span>, </span>
<span id="cb2-8">           <span class="st" style="color: #20794D;">"huxtable"</span>, </span>
<span id="cb2-9">           <span class="st" style="color: #20794D;">"reactable"</span>, </span>
<span id="cb2-10">           <span class="st" style="color: #20794D;">"formattable"</span>, </span>
<span id="cb2-11">           <span class="st" style="color: #20794D;">"pixiedust"</span>, </span>
<span id="cb2-12">           <span class="st" style="color: #20794D;">"agricolae"</span>, </span>
<span id="cb2-13">           <span class="st" style="color: #20794D;">"car"</span></span>
<span id="cb2-14">         )</span>
<span id="cb2-15">)</span></code></pre></div>
<p>After the script is run, I execute 2 more commands to clean up the image (as advised by the <a href="https://rocker-project.org/use/extending.html#install-binary-packages">Rocker team</a>). This image is available on <a href="https://hub.docker.com/repository/docker/tclark89/tidyverse-extra">Docker Hub</a> as <code>tclark89/tidyverse-extra</code></p>
<p>One day I may dig more deeply into setting up my own <em>very</em> custom image by building something more from scratch, but for now the <code>rocker/tidyverse</code> image works as great jumping-off point.</p>
</section>
<section id="compose" class="level3">
<h3 class="anchored" data-anchor-id="compose">Compose</h3>
<p>Now that the image has been created it needs to be spun up, and it needs to be run with certain parameters. The best way to do that is with a <code>docker-compose.yml</code> file. Currently mine looks like this:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode yml code-with-copy"><code class="sourceCode yaml"><span id="cb3-1"><span class="fu" style="color: #4758AB;">services</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-2"><span class="at" style="color: #657422;">  </span><span class="fu" style="color: #4758AB;">rstudio</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-3"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">image</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> tclark89/tidyverse-extra:4.2.1</span></span>
<span id="cb3-4"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">ports</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span></span>
<span id="cb3-5"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> </span><span class="st" style="color: #20794D;">"8787:8787"</span></span>
<span id="cb3-6"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">environment</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-7"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">PASSWORD</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> rstudio</span></span>
<span id="cb3-8"><span class="at" style="color: #657422;">      </span><span class="fu" style="color: #4758AB;">ROOT</span><span class="kw" style="color: #003B4F;">:</span><span class="at" style="color: #657422;"> </span><span class="ch" style="color: #20794D;">true</span></span>
<span id="cb3-9"><span class="at" style="color: #657422;">    </span><span class="fu" style="color: #4758AB;">volumes</span><span class="kw" style="color: #003B4F;">:</span></span>
<span id="cb3-10"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> ~/.config/rstudio:/home/rstudio/.config/rstudio</span></span>
<span id="cb3-11"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> ~/.local/share/rstudio:/home/rstudio/.local/share/rstudio</span></span>
<span id="cb3-12"><span class="at" style="color: #657422;">      </span><span class="kw" style="color: #003B4F;">-</span><span class="at" style="color: #657422;"> ~/code/R:/home/rstudio/workspace</span></span></code></pre></div>
<p>The <code>docker-compose.yml</code> file starts the <code>rstudio</code> service:</p>
<ul>
<li>Uses my custom docker image as the base</li>
<li>Maps the container ports</li>
<li>Sets the rstudio user’s password and gives it sudo via <a href="https://rocker-project.org/images/versioned/rstudio.html#environment-variables"> environment variables</a></li>
<li>Maps some directories to be shared between host and container. This lets settings and files persist in my <code>/home</code> directory between sessions.</li>
</ul>
<p>The rocker team provides an example <a href="https://rocker-project.org/images/versioned/rstudio.html#editing-work-on-rstudio-server"> compose file</a> as well.</p>
</section>
<section id="running-the-container" class="level3">
<h3 class="anchored" data-anchor-id="running-the-container">Running the Container</h3>
<p>All it takes to run the docker container now is to <code>cd</code> to the directory with the docker-compose.yml file and issue the command: <code>docker compose up</code>. However, I would like for this to happen automatically so I can just login and go. There may be a different way to do this, but I went with a systemd service file.</p>
<p>After some digging through the Arch Wiki and various SO posts I settled on the following:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode ini code-with-copy"><code class="sourceCode ini"><span id="cb4-1"><span class="kw" style="color: #003B4F;">[Unit]</span></span>
<span id="cb4-2"><span class="dt" style="color: #AD0000;">Description</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">%i service with docker compose</span></span>
<span id="cb4-3"><span class="dt" style="color: #AD0000;">PartOf</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">docker.service</span></span>
<span id="cb4-4"><span class="dt" style="color: #AD0000;">After</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">docker.service</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;">[Service]</span></span>
<span id="cb4-7"><span class="dt" style="color: #AD0000;">Type</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">oneshot</span></span>
<span id="cb4-8"><span class="dt" style="color: #AD0000;">RemainAfterExit</span><span class="ot" style="color: #003B4F;">=</span><span class="kw" style="color: #003B4F;">true</span></span>
<span id="cb4-9"><span class="dt" style="color: #AD0000;">WorkingDirectory</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">/home/%u/docker/compose/%i</span></span>
<span id="cb4-10"><span class="dt" style="color: #AD0000;">ExecStart</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">/usr/bin/docker compose up -d --remove-orphans</span></span>
<span id="cb4-11"><span class="dt" style="color: #AD0000;">ExecStop</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">/usr/bin/docker-compose down</span></span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="kw" style="color: #003B4F;">[Install]</span></span>
<span id="cb4-14"><span class="dt" style="color: #AD0000;">WantedBy</span><span class="ot" style="color: #003B4F;">=</span><span class="st" style="color: #20794D;">multi-user.target</span></span></code></pre></div>
<p>This service file is a user <code>@.service</code>, so the file is named <code>docker-compose@.service</code> and called via:</p>
<blockquote class="blockquote">
<p><code>systemctl start --user docker-compose@tidyverse-extra.service</code></p>
</blockquote>
<p>or for a persistent setup:</p>
<blockquote class="blockquote">
<p><code>systemctl enable --now --user docker-compose@tidyverse-extra.service</code></p>
</blockquote>
<p>Because <code>docker compose</code> looks for a <code>docker-compose.yml</code> file in the working directory, I needed to specify one in this file and make sure that directory existed in my <code>/home</code>. The <code>%u</code> makes this file user-agnostic and the <code>%i</code> and <code>@</code> make it usable for any other docker service I may decide to use later. I just need to make sure that I create a directory in <code>~/docker/compose/</code> and put the <code>docker-compose.yml</code> file there.</p>
<p>As a final note, this will only work if your user is part of the docker group, otherwise docker needs root privileges. This file could just as easily be made to work as root, but the docker-compose.yml file would need to have absolute paths instead of user-relative ones.</p>
</section>
</section>
<section id="using-rstudio" class="level2">
<h2 class="anchored" data-anchor-id="using-rstudio">Using RStudio</h2>
<p>Now that all of the pieces are in place, all I have to do to access RStudio at home is to open a broswer, access my file server at port 8787, and log in to RStudio Server. Then I can just <code>git pull</code> and get back to work on this website or whatever project I am focused on.</p>
<p>For now this all works wonderfully. I don’t have to muck around with dependencies on my server, and saving the docker files to GitHub and the image to Docker Hub means that it should be reproducible in case I can’t access the server. For instance, if I am away from home but want to work on a project I can spin up the docker image directly on my Chromebook (via the built-in Linux VM) and fire away. In fact, you can even run this image in a browser via <a href="https://labs.play-with-docker.com/">Play with Docker</a>, though it eats up quite a bit of RAM to do so.</p>


</section>

 ]]></description>
  <category>Docker</category>
  <category>Rocker Project</category>
  <category>R</category>
  <category>RStudio</category>
  <category>Linux</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-07-my-rstudio-setup/index.html</guid>
  <pubDate>Wed, 07 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-07-my-rstudio-setup/rocker.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Power Query Tip - Opening Multiple Files</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-05-powerbi-loop-files/index.html</link>
  <description><![CDATA[ 




<p>While I prefer to use R/RMarkdown/Quarto as much as possible for data wrangling and reporting, sometimes the right tool is something else. Many organizations are heavily tied in to Microsoft’s ecosystem and it is what lots of managers and executives are familiar with.</p>
<p>In this sort of environemnt, the suite of Power tools: PowerBI, Power Query, Power Pivot, etc. is a good choice. As a bonus, they play nicely with OneDrive and SharePoint, and PowerBI allows for automated data updating.</p>
<p>In my day-to-day I run into situations where I need to combine several Excel files that are split into chunks, say some sort of accounting information that is saved in separate files per year. Power Query’s GUI can help to get you started, but if you need to do any more complicated data wrangling you’ll need to dive into M code.</p>
<p>A common template I use for the above scenario is something like this:</p>
<pre><code>let
  // Navigate to the SharePoint library (not folder) with the files.
  Source = SharePoint.Files(
    "https://contoso.sharepoint.com/personal/tyler_contoso_com",
    [ApiVersion = 15]
  ),
  
  // Filter the file list down to the correct folder
  #"Filtered Folders" = Table.SelectRows(
    Source, 
    each [Folder Path] = "https://contoso.sharepoint.com/personal/tyler_contoso_com/Documents/Documents/Widget Exports/"),
    
  // Filter down to just the right files.
  // In this example, the files are named "2022 Widget_Exports.xlsx", 
  // "2021 Widget_exports.xlsx", etc.
  #"Filtered Files" = Table.SelectRows(
    #"Filtered Folders", 
    each Text.Contains([Name], "Widget_Exports.xlsx")
    ),
    
  // Excel Opener Function
  ExcelOpener = (folderPath, fileName) =&gt; 
  let
    // This function nested in the main function processes all of
    // the Excel files in the same way. It does not change the
    // column types yet, that is saved for the end. I have had the 
    // column type information get tossed out in a following step,
    // that's why it doesn't get defined here.
    // The function does name the columns. 
    SelectFile = #"Filtered Files"{
      [Name = fileName, 
      #"Folder Path" = folderPath]}[Content],
      
      #"Imported Excel" = Excel.Workbook(SelectFile, null, true),
      
      #"Navigation" = #"Imported Excel"{
      [Item = "Sheet", Kind = "Sheet"]
      }[Data],
      
      #"Filtered rows" = Table.SelectRows(
        // If there are any merged cells, this can toss unnecessary rows
        #"Navigation", each [Column2] &lt;&gt; null),
        
      #"Promoted headers" = Table.PromoteHeaders(
      #"Filtered rows", [PromoteAllScalars = true]
      )
  in
    #"Promoted headers",
  
  // To use the function, make a new column and get its values from the
  // function. It will be a nested data column.
  #"Added Custom" = Table.AddColumn(
    #"Filtered Files", 
    "Custom", 
    each ExcelOpener([Folder Path], [Name])
    ),
  
  // We can remove everything but the new column  
  #"Removed columns" = Table.RemoveColumns(
    #"Added Custom", 
    {"Content", "Name", "Extension", "Date accessed", 
      "Date modified", "Date created", "Attributes", 
      "Folder Path"}
    ),
  
  // Expand the column and select all of the named columns  
  #"Expanded Custom" = Table.ExpandTableColumn(
    #"Removed columns", 
    "Custom", 
    {"Acct No", "Cust No", "PO", "Transaction Date", "Widget Type", 
      "Widget Cost Per Unit", "Total Units", "Total Cost", 
     "Shipped", "Shipped Date"}
    ),
  
  // Now we will set the column types
  #"Changed column type" = Table.TransformColumnTypes(
    #"Expanded Custom", 
    {
      {"Acct No", type text}, 
      {"Cust No", type text}, 
      {"PO", type text}, 
      {"Transaction Date", type date}, 
      {"Widget Type", type text}, 
      {"Widget Cost Per Unit", type number}, 
      {"Total Units", Int64.Type}, 
      {"Total Cost", type number}, 
      {"Shipped", logical}, 
      {"Shipped Date", type date}
      }
    )
in
  #"Changed column type"</code></pre>
<p>Using code similar to this will combine the directory full of files into one big Power dataset that you can now modify as needed for the analysis or report that you are using.</p>



 ]]></description>
  <category>Microsoft</category>
  <category>PowerBI</category>
  <category>M Code</category>
  <category>Excel</category>
  <category>code</category>
  <category>notes</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-05-powerbi-loop-files/index.html</guid>
  <pubDate>Mon, 05 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-05-powerbi-loop-files/social-default-image.png" medium="image" type="image/png" height="76" width="144"/>
</item>
<item>
  <title>Some Notes About Flatpak</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-04-flatpak/index.html</link>
  <description><![CDATA[ 




<section id="a-distro-hopping-tale" class="level2">
<h2 class="anchored" data-anchor-id="a-distro-hopping-tale">A Distro-hopping Tale</h2>
<p>After a few years of running <a href="https://archlinux.org/">ArchLinux</a> on my NAS PC, I recently (a couple weeks ago?) decided to switch to a solid foundation of <a href="https://www.debian.org/releases/stable/">Debian Stable</a> (Bullseye 11.4 at the time of this post), with most of my userland apps installed via Flatpak.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><a href="https://flatpak.org/" title="Flatpak"><img src="https://tclark89.github.io/quarto-blog/posts/2022-09-04-flatpak/Flatpak_Logo.svg.png" class="img-fluid figure-img" style="width:20.0%"></a></p>
<p></p><figcaption class="figure-caption">Flatpak</figcaption><p></p>
</figure>
</div>
<p>One is not better than the other, but I was tired of having to regularly check for updates, decide if they looked important, check the homepage for any breakage news, etc. It’s not so bad for a desktop that is used for tinkering and playing, but for a fileserver running programs that I’d rather not restart all the time (hold on, let me pause this show on Plex and make sure my backup NAS isn’t syncing)…</p>
<p>So far so good. The overall system is smaller (due to Debian breaking up packages while Arch installs the kitchen sink at times), and it makes my root backup tarball smaller since I can leave out the flatpak directory and focus on the actual system.</p>
</section>
<section id="flatpak-notes" class="level2">
<h2 class="anchored" data-anchor-id="flatpak-notes">Flatpak Notes</h2>
<p>Anyway, the main notes that I meant to put here are:</p>
<ol type="1">
<li><p><code>flatpak remote-add flathub flathub-url</code> is <strong>not</strong> the same as <code>sudo flatpak remote-add flathub flathub-url</code></p>
<p>*For a single-user system there’s not that much real difference in terms of the experience, but installing flathub without sudo only installs the repo for YOU and then any apps you install get saved in /home. You do you.</p></li>
<li><p>Flatpak apps are installed at <code>/var/lib/flatpak</code>, so keep that as a separate BTRFS subvolume to exclude them from root backups.</p></li>
<li><p>For apps, MakeMKV in particular, the app’s personal root is /app/, not /.</p></li>
<li><p>User config files and data are mostly stored per-app in ~/.var/, but some apps have access to /home/user.</p></li>
<li><p>Add /var/lib/flatpak/exports/bin to you $PATH to more easily call the apps from the command line, in case error codes need to be looked at.</p></li>
</ol>
<p>Overall I’m pretty happy with the change. Most of the gui programs that I use are in flathub, so that’s pretty easy. I was worried about bloat and performance, but it’s really not that bad. Apps are sandboxed, yes, but they can share Flatpak libraries and runtimes so there isn’t so much redundancy. It’s really nice when installing a single Gnome app or Wine not to have to install an entire suite of Gnome apps and multi-lib stuff just for one program.</p>


</section>

 ]]></description>
  <category>flatpak</category>
  <category>linux</category>
  <category>notes</category>
  <category>debian</category>
  <category>archlinux</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-04-flatpak/index.html</guid>
  <pubDate>Sun, 04 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-04-flatpak/Flatpak_Logo.svg.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>My favorite R packages</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-03-my-favorite-packages/index.html</link>
  <description><![CDATA[ 




<p>When I first started out doing data analysis professionally, I tried not to stray from base R. Why? I’m not sure. After all, I had to install something to read Excel files… At any rate, at some point I decided to have IT install <a href="https://www.rstudio.com/products/rstudio/">RStudio</a>’s IDE on my laptop and to try out this “<a href="https://www.tidyverse.org/">tidyverse</a>” thing.</p>
<p><strong>Mind Blown</strong></p>
<p>Just the <code>%&gt;%</code> operator alone radically changed my workflow and caused me to refactor all of my code (Hell, even R is integrating a pipe function now: <code>|&gt;</code> in R 4.1+). Then learning how to use all of the data manipulation tools in <code>dplyr</code> (<code>mutate</code>, <code>select</code>, <code>separate</code>, oh how I could go on) made working with data exciting and intelligible instead of some chore full of arcane commands and confusing code.</p>
<p>RMarkdown and now Quarto have given me many new avenues for reporting data, results, and analysis, even though I am still heavily tied to having to email an Excel file for some of the old-school folks (I guess if it ain’t broke…). Well, that’s why I learned some VBA too.</p>



 ]]></description>
  <category>R</category>
  <category>Rstudio</category>
  <category>tidyverse</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-03-my-favorite-packages/index.html</guid>
  <pubDate>Sat, 03 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-03-my-favorite-packages/magrittr.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Welcome To My Blog</title>
  <dc:creator>Tyler Clark</dc:creator>
  <link>https://tclark89.github.io/quarto-blog/posts/2022-09-03-welcome/index.html</link>
  <description><![CDATA[ 




<p>Welcome to my blog. Currently this blog is really just a collection of ideas and code that I find useful. Maybe you will too.</p>
<p>The github repository for the entire site can be found <a href="https://github.com/tclark89/quarto-blog">here</a>.</p>



 ]]></description>
  <category>news</category>
  <guid>https://tclark89.github.io/quarto-blog/posts/2022-09-03-welcome/index.html</guid>
  <pubDate>Sat, 03 Sep 2022 05:00:00 GMT</pubDate>
  <media:content url="https://tclark89.github.io/quarto-blog/posts/2022-09-03-welcome/portrait.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
